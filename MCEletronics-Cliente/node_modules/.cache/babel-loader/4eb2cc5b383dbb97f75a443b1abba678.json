{"remainingRequest":"/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/node_modules/babel-loader/lib/index.js!/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/src/components/LoginComponents/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/src/components/LoginComponents/Register.vue","mtime":1561239112435},{"path":"/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/node_modules/cache-loader/dist/cjs.js","mtime":1560540077956},{"path":"/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/node_modules/babel-loader/lib/index.js","mtime":1560540072121},{"path":"/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/node_modules/cache-loader/dist/cjs.js","mtime":1560540077956},{"path":"/home/emanoel/Documentos/MCEletronics/MCEletronics-Cliente/node_modules/vue-loader/lib/index.js","mtime":1560540078351}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NavBar from \"../shared/LoginBar\";\nimport api from \"../../services/api\";\nimport { successToaster, errorToaster } from \"../../services/ErrorHandler.js\";\n/* eslint-disable */\n\nexport default {\n  name: \"Register\",\n  data: function data() {\n    return {\n      passwordFieldType: \"password\",\n      open: true,\n      close: false,\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      errorMessage: [],\n      passwordcomparation: \"\"\n    };\n  },\n  components: {\n    NavBar: NavBar\n  },\n  methods: {\n    switchVisibility: function switchVisibility() {\n      this.passwordFieldType = this.passwordFieldType === \"password\" ? \"text\" : \"password\";\n\n      if (this.open == true) {\n        this.open = false;\n        this.close = true;\n      } else if (this.open == false) {\n        this.open = true;\n        this.close = false;\n      }\n    },\n    checkForm: function checkForm() {\n      this.errorMessage = [];\n\n      if (this.user.password.length < 5) {\n        this.errorMessage.push(\"Senha deve conter mais de 5 digitos\");\n      }\n\n      if (this.user.username.length < 5) {\n        this.errorMessage.push(\"Nome deve conter mais de 5 caracteres\");\n      }\n\n      if (this.user.password != this.passwordcomparation) {\n        this.errorMessage.push(\"Senhas não conferem\");\n      }\n\n      console.log(this.errorMessage.length);\n    },\n    createAccount: function createAccount(e) {\n      var _this = this;\n\n      this.checkForm();\n\n      if (this.errorMessage.length == 0) {\n        var formData = new FormData();\n        formData.append(\"username\", this.user.username);\n        formData.append(\"password\", this.user.password);\n        api.postUser(formData).then(function (Response) {\n          if (Response.status == 200) {\n            console.log(Response.data);\n            successToaster(\"Cadastrado com sucesso\", \"Usuário cadastrado com sucesso\");\n\n            _this.$router.push({\n              name: \"login\"\n            });\n          } else {\n            console.log(Response.data);\n          }\n        }).catch(function (e) {\n          console.log(e);\n\n          if (e.response.status == 401) {\n            errorToaster(\"Usuário já cadastrado\", \"Já cadastrado\");\n          } else {\n            errorToaster(\"Falha no cadastro\", \"Tente novamente mais tarde\");\n          }\n        });\n      } else {\n        this.checkForm();\n      }\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n  <div>\n      \n    <NavBar></NavBar>\n      <b-card tag=\"article\" class=\"mb-2\" title=\"Cadastro\" style=\"max-width:35rem; border:solid 1px rgba(0,0,0,0.1)\" >\n        <b-form @submit.prevent=\"createAccount\">\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            v-for=\"(error, index) in errorMessage\"\n            :key=\"index\"\n          >{{error}}</div>\n\n          <b-form-group id=\"username\" label=\"Nome de Usuário\" label-for=\"username\" class=\"required-field\">\n            <b-form-input\n              class=\"input\"\n              type=\"text\"\n              v-model=\"user.username\"\n              name=\"username\"\n              placeholder=\"Nome de Usuário\"\n            />\n          </b-form-group>\n\n          <b-form-group id=\"senha\" label=\"Senha\" label-for=\"password\" class=\"required-field\">\n           \n              <b-form-input\n                :type=\"passwordFieldType\"\n                class=\"input\"\n                maxlength=\"10\"\n                v-model=\"user.password\"\n                name=\"password\"\n                placeholder=\"******* \"\n             />\n              \n             \n                <i\n                  :class=\"{'fas fa-eye':open,'fas fa-eye-slash':close }\"\n                  style=\"position:absolute;right:5%;top:46%;visibility:visible,cursor:pointer\"\n                  @click=\"switchVisibility\"\n                ></i>\n       \n          </b-form-group>\n\n          <b-form-group\n            id=\"passoword2\"\n            label=\"Repita a senha\"\n            label-for=\"password2\"\n            class=\"required-field\"\n          >\n            <b-form-input \n              type=\"password\"\n              maxlength=\"10\"\n              name=\"password2\"\n              v-model=\"passwordcomparation\"\n              placeholder=\"******* \"\n            />\n          </b-form-group>\n\n          <b-button\n            type=\"submit\"\n            block\n            variant=\"primary\"\n            style=\"background-color:#033076\"\n            id=\"btn-register\"\n          >Registrar</b-button>\n          <div class=\"col-md-12 text-right\">\n              <router-link :to=\"{name:'login'}\">\n                      <p class=\"small\">Já tem cadastro?</p>\n              </router-link>\n        \n        </div>\n        </b-form>\n      </b-card>\n    </div>\n\n</template>\n\n<script>\nimport NavBar from \"../shared/LoginBar\";\nimport api from \"../../services/api\";\nimport { successToaster, errorToaster } from \"../../services/ErrorHandler.js\";\n/* eslint-disable */\n\nexport default {\n  name: \"Register\",\n\n  data() {\n    return {\n      passwordFieldType: \"password\",\n      open:true,\n      close:false,\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      errorMessage: [],\n      passwordcomparation: \"\"\n    };\n  },\n\n  components: {\n    NavBar\n  },\n  methods: {\n    switchVisibility() {\n      this.passwordFieldType =this.passwordFieldType === \"password\" ? \"text\" : \"password\";\n      if(this.open == true){\n        this.open = false;\n        this.close = true;\n      }\n     else if(this.open==false){\n        this.open = true;\n        this.close = false;\n      }\n      \n      \n      \n    },\n\n    checkForm() {\n      this.errorMessage = [];\n      if (this.user.password.length < 5) {\n        this.errorMessage.push(\"Senha deve conter mais de 5 digitos\");\n      }\n      if (this.user.username.length < 5) {\n        this.errorMessage.push(\"Nome deve conter mais de 5 caracteres\");\n      }\n\n      if (this.user.password != this.passwordcomparation) {\n        this.errorMessage.push(\"Senhas não conferem\");\n      }\n      console.log(this.errorMessage.length);\n    },\n    createAccount(e) {\n      this.checkForm();\n\n      if (this.errorMessage.length == 0) {\n        let formData = new FormData();\n        formData.append(\"username\", this.user.username);\n        formData.append(\"password\", this.user.password);\n\n        api\n          .postUser(formData)\n          .then(Response => {\n            if (Response.status == 200) {\n              console.log(Response.data);\n              successToaster(\n                \"Cadastrado com sucesso\",\n                \"Usuário cadastrado com sucesso\"\n              );\n              this.$router.push({ name: \"login\" });\n            } else {\n              console.log(Response.data);\n            }\n          })\n          .catch(e => {\n            console.log(e);\n            if (e.response.status == 401) {\n              errorToaster(\"Usuário já cadastrado\", \"Já cadastrado\");\n            } else {\n              errorToaster(\"Falha no cadastro\", \"Tente novamente mais tarde\");\n            }\n          });\n      } else {\n        this.checkForm();\n      }\n    }\n  }\n  \n};\n</script>\n\n\n<style >\ntemplate{ \n    background-color: grey;\n}\n#toast-container > div {\n  opacity: 1;\n}\n.toast {\n  font-size: initial !important;\n  border: initial !important;\n  backdrop-filter: blur(0) !important;\n}\n.toast-success {\n  background-color: #51a351 !important;\n}\n.toast-error {\n  background-color: #bd362f !important;\n}\n.toast-info {\n  background-color: #2f96b4 !important;\n}\n.toast-warning {\n  background-color: #f89406 !important;\n\n}\n</style>\n\n"],"sourceRoot":"src/components/LoginComponents"}]}